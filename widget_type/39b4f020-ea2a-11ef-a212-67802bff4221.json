{
  "entityType" : "WIDGET_TYPE",
  "entity" : {
    "fqn" : "liga_desliga_solenoide",
    "name" : "Solenoide On/Off",
    "deprecated" : false,
    "image" : null,
    "description" : null,
    "descriptor" : {
      "type" : "latest",
      "sizeX" : 6.5,
      "sizeY" : 4,
      "resources" : [ ],
      "templateHtml" : "<div  id=\"title\" [ngStyle]=\"{'background-color': '#191B1F' }\">\n    <p id=\"titulo\">{{entityName}}</p>\n<div class=\"SVGdiv\">\n    \n<svg *ngIf=\"data=='on'\" xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" viewBox=\"0 0 1920 1920\" version=\"1.1\">\n\t<path d=\"M 811.558 206.475 C 806.251 208.388, 803.077 210.872, 799.530 215.887 C 797.083 219.348, 796.491 221.309, 796.167 227.043 C 795.829 233.033, 795.514 234, 793.904 234 C 792.875 234, 784.713 233.335, 775.766 232.522 C 766.820 231.709, 740.600 229.458, 717.500 227.519 C 694.400 225.581, 665.375 223.054, 653 221.904 C 624.811 219.285, 619.523 219.580, 609.524 224.328 C 587.689 234.698, 578.358 260.892, 588.686 282.828 C 592.124 290.130, 601.797 299.844, 609 303.227 C 619.258 308.046, 623.961 308.383, 649 306.094 C 661.375 304.962, 685 302.889, 701.500 301.486 C 718 300.083, 744.215 297.825, 759.756 296.468 C 775.297 295.110, 789.810 294, 792.006 294 L 796 294 796 299.032 C 796 312.159, 805.281 321.656, 818.825 322.387 L 824.500 322.693 824.762 359.346 L 825.025 396 810.498 396 L 795.971 396 792.235 399.422 L 788.500 402.845 788.220 447.922 L 787.941 493 741.786 493 C 697.014 493, 695.502 493.063, 691.315 495.090 C 677.056 501.992, 674.030 522.349, 685.658 533.136 C 690.797 537.902, 694.860 539.289, 705.151 539.789 C 716.459 540.338, 715.222 538.402, 717.029 558.391 C 717.899 568.011, 717.900 574.086, 717.036 583.048 C 713.763 616.984, 700.862 636.187, 675.578 644.761 L 667.500 647.500 513.250 647.771 L 359 648.043 358.983 625.271 C 358.971 609.365, 358.533 600.459, 357.531 595.730 C 353.797 578.111, 340.365 563.830, 324 560.080 C 321.525 559.513, 312.413 559.038, 303.750 559.024 L 288 559 288 795.095 L 288 1031.191 306.250 1030.845 C 324.407 1030.502, 324.535 1030.484, 331.288 1027.285 C 344.912 1020.831, 355.241 1007.369, 357.924 992.566 C 358.516 989.303, 359 976.590, 359 964.316 L 359 942 484.869 942 C 593.240 942, 611.973 942.212, 619.619 943.528 C 637.900 946.674, 654.165 953.446, 668.292 963.793 C 701.908 988.415, 707.685 992.025, 728.431 1001.371 C 758.308 1014.830, 790.175 1023.176, 828.685 1027.625 C 846.926 1029.733, 887.057 1030.012, 905 1028.155 C 956.734 1022.801, 1002.445 1008.474, 1037.893 986.501 C 1042.627 983.567, 1052.800 976.391, 1060.500 970.556 C 1081.453 954.676, 1097.586 947.175, 1118.710 943.491 C 1131.445 941.271, 1197.918 941.359, 1211.047 943.615 C 1261.495 952.280, 1300.748 992.735, 1307.965 1043.500 C 1308.538 1047.532, 1308.969 1077.049, 1308.980 1113.121 L 1309 1175.742 1302.750 1176.446 C 1294.764 1177.346, 1291.042 1179.146, 1286.116 1184.490 C 1281.135 1189.893, 1280.010 1193.953, 1280.015 1206.500 C 1280.019 1214.906, 1280.396 1217.308, 1282.381 1221.571 C 1285.087 1227.383, 1290.400 1232.204, 1295.922 1233.859 C 1298.707 1234.693, 1341.934 1234.997, 1456.616 1234.990 L 1613.500 1234.980 1618.617 1232.598 C 1628.144 1228.162, 1632 1220.612, 1632 1206.398 C 1632 1194.014, 1630.653 1189.663, 1625.019 1183.855 C 1620.277 1178.965, 1613.217 1176, 1606.318 1176 L 1603 1176 1602.985 1075.250 C 1602.968 957.009, 1602.500 946.296, 1595.887 912.500 C 1581.120 837.040, 1537.939 767.192, 1476 718.575 C 1434.215 685.778, 1387.237 664.430, 1334 654.049 C 1306.963 648.776, 1306.298 648.749, 1184.500 648.044 C 1058.643 647.315, 1067.154 647.779, 1053.045 640.866 C 1044.419 636.639, 1034.610 626.780, 1029.781 617.484 C 1021.961 602.430, 1018.788 581.494, 1020.877 558.741 C 1022.747 538.375, 1021.506 540.341, 1032.842 539.786 C 1044.167 539.232, 1048.883 537.291, 1054.314 530.946 C 1064.262 519.324, 1059.799 500.817, 1045.500 494.398 C 1044.400 493.904, 1022.575 493.275, 997 493 L 950.500 492.500 950 447.672 L 949.500 402.845 945.765 399.422 L 942.029 396 927.515 396 L 913 396 913 359.607 C 913 320.696, 912.893 321.516, 917.838 322.469 C 921.135 323.104, 928.326 321.017, 932.313 318.269 C 937.923 314.402, 941.396 307.852, 942 300 L 942.500 293.500 945.500 293.743 C 954.080 294.437, 1012.736 299.476, 1059.327 303.522 C 1117.307 308.557, 1117.573 308.556, 1129 303.215 C 1136.145 299.875, 1145.871 290.142, 1149.262 282.937 C 1159.778 260.601, 1150.668 234.867, 1128.521 224.350 C 1123.260 221.851, 1119.092 220.622, 1114.740 220.286 C 1111.264 220.017, 1085.018 221.853, 1055.500 224.430 C 962.701 232.531, 945.540 234.001, 943.750 234 C 942.294 234, 942 233.070, 942 228.468 C 942 219.089, 937.836 212.156, 929.500 207.658 C 925.556 205.530, 924.731 205.497, 870.500 205.277 C 825.065 205.093, 814.814 205.301, 811.558 \" stroke=\"none\" fill=\"#ffffff\" fill-rule=\"evenodd\"/>\n   <path d=\" M 1438.364 1308.431 C 1366.739 1416.443, 1322.248 1502.558, 1312.895 1551.279 C 1311.059 1560.846, 1310.828 1564.638, 1311.330 1577 C 1312.206 1598.600, 1316.422 1614.913, 1326.121 1634.241 C 1346.503 1674.857, 1382.393 1702.501, 1427.312 1712.183 C 1442.231 1715.399, 1470.048 1715.348, 1485 1712.077 C 1520.932 1704.215, 1551.113 1684.801, 1572.962 1655.494 C 1594.042 1627.219, 1604.817 1586.504, 1599.552 1555.018 C 1592.726 1514.200, 1562.054 1449.585, 1507.689 1361.500 C 1492.189 1336.386, 1457.016 1283, 1455.969 1283 C 1455.561 1283, 1447.639 1294.444, 1438.364 1308.431 M 1346.596 1518.250 C 1342.310 1525.570, 1338.871 1534.154, 1336.279 1544 C 1332.673 1557.703, 1332.004 1581.309, 1334.820 1595.530 C 1339.060 1616.950, 1349.240 1635.883, 1363.414 1648.713 C 1374.540 1658.785, 1391.971 1667.941, 1403.143 1669.582 L 1407.500 1670.222 1403.500 1666.971 C 1394.762 1659.869, 1377.192 1640.991, 1371.860 1632.977 C 1364.500 1621.914, 1360.921 1614.616, 1357.161 1603 C 1350.765 1583.244, 1348.643 1565.285, 1349.146 1535.158 C 1349.341 1523.521, 1349.406 1514, 1349.292 1514 C 1349.178 1514, 1347.964 1515.912, 1346.596 1518.250\" stroke=\"none\" fill=\"#34a4eb\" fill-rule=\"evenodd\"/>\n</svg>    \n <svg *ngIf=\"data=='off'\" xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" viewBox=\"0 0 1920 1920\" version=\"1.1\">\n\t<path d=\"M 811.558 206.475 C 806.251 208.388, 803.077 210.872, 799.530 215.887 C 797.083 219.348, 796.491 221.309, 796.167 227.043 C 795.829 233.033, 795.514 234, 793.904 234 C 792.875 234, 784.713 233.335, 775.766 232.522 C 766.820 231.709, 740.600 229.458, 717.500 227.519 C 694.400 225.581, 665.375 223.054, 653 221.904 C 624.811 219.285, 619.523 219.580, 609.524 224.328 C 587.689 234.698, 578.358 260.892, 588.686 282.828 C 592.124 290.130, 601.797 299.844, 609 303.227 C 619.258 308.046, 623.961 308.383, 649 306.094 C 661.375 304.962, 685 302.889, 701.500 301.486 C 718 300.083, 744.215 297.825, 759.756 296.468 C 775.297 295.110, 789.810 294, 792.006 294 L 796 294 796 299.032 C 796 312.159, 805.281 321.656, 818.825 322.387 L 824.500 322.693 824.762 359.346 L 825.025 396 810.498 396 L 795.971 396 792.235 399.422 L 788.500 402.845 788.220 447.922 L 787.941 493 741.786 493 C 697.014 493, 695.502 493.063, 691.315 495.090 C 677.056 501.992, 674.030 522.349, 685.658 533.136 C 690.797 537.902, 694.860 539.289, 705.151 539.789 C 716.459 540.338, 715.222 538.402, 717.029 558.391 C 717.899 568.011, 717.900 574.086, 717.036 583.048 C 713.763 616.984, 700.862 636.187, 675.578 644.761 L 667.500 647.500 513.250 647.771 L 359 648.043 358.983 625.271 C 358.971 609.365, 358.533 600.459, 357.531 595.730 C 353.797 578.111, 340.365 563.830, 324 560.080 C 321.525 559.513, 312.413 559.038, 303.750 559.024 L 288 559 288 795.095 L 288 1031.191 306.250 1030.845 C 324.407 1030.502, 324.535 1030.484, 331.288 1027.285 C 344.912 1020.831, 355.241 1007.369, 357.924 992.566 C 358.516 989.303, 359 976.590, 359 964.316 L 359 942 484.869 942 C 593.240 942, 611.973 942.212, 619.619 943.528 C 637.900 946.674, 654.165 953.446, 668.292 963.793 C 701.908 988.415, 707.685 992.025, 728.431 1001.371 C 758.308 1014.830, 790.175 1023.176, 828.685 1027.625 C 846.926 1029.733, 887.057 1030.012, 905 1028.155 C 956.734 1022.801, 1002.445 1008.474, 1037.893 986.501 C 1042.627 983.567, 1052.800 976.391, 1060.500 970.556 C 1081.453 954.676, 1097.586 947.175, 1118.710 943.491 C 1131.445 941.271, 1197.918 941.359, 1211.047 943.615 C 1261.495 952.280, 1300.748 992.735, 1307.965 1043.500 C 1308.538 1047.532, 1308.969 1077.049, 1308.980 1113.121 L 1309 1175.742 1302.750 1176.446 C 1294.764 1177.346, 1291.042 1179.146, 1286.116 1184.490 C 1281.135 1189.893, 1280.010 1193.953, 1280.015 1206.500 C 1280.019 1214.906, 1280.396 1217.308, 1282.381 1221.571 C 1285.087 1227.383, 1290.400 1232.204, 1295.922 1233.859 C 1298.707 1234.693, 1341.934 1234.997, 1456.616 1234.990 L 1613.500 1234.980 1618.617 1232.598 C 1628.144 1228.162, 1632 1220.612, 1632 1206.398 C 1632 1194.014, 1630.653 1189.663, 1625.019 1183.855 C 1620.277 1178.965, 1613.217 1176, 1606.318 1176 L 1603 1176 1602.985 1075.250 C 1602.968 957.009, 1602.500 946.296, 1595.887 912.500 C 1581.120 837.040, 1537.939 767.192, 1476 718.575 C 1434.215 685.778, 1387.237 664.430, 1334 654.049 C 1306.963 648.776, 1306.298 648.749, 1184.500 648.044 C 1058.643 647.315, 1067.154 647.779, 1053.045 640.866 C 1044.419 636.639, 1034.610 626.780, 1029.781 617.484 C 1021.961 602.430, 1018.788 581.494, 1020.877 558.741 C 1022.747 538.375, 1021.506 540.341, 1032.842 539.786 C 1044.167 539.232, 1048.883 537.291, 1054.314 530.946 C 1064.262 519.324, 1059.799 500.817, 1045.500 494.398 C 1044.400 493.904, 1022.575 493.275, 997 493 L 950.500 492.500 950 447.672 L 949.500 402.845 945.765 399.422 L 942.029 396 927.515 396 L 913 396 913 359.607 C 913 320.696, 912.893 321.516, 917.838 322.469 C 921.135 323.104, 928.326 321.017, 932.313 318.269 C 937.923 314.402, 941.396 307.852, 942 300 L 942.500 293.500 945.500 293.743 C 954.080 294.437, 1012.736 299.476, 1059.327 303.522 C 1117.307 308.557, 1117.573 308.556, 1129 303.215 C 1136.145 299.875, 1145.871 290.142, 1149.262 282.937 C 1159.778 260.601, 1150.668 234.867, 1128.521 224.350 C 1123.260 221.851, 1119.092 220.622, 1114.740 220.286 C 1111.264 220.017, 1085.018 221.853, 1055.500 224.430 C 962.701 232.531, 945.540 234.001, 943.750 234 C 942.294 234, 942 233.070, 942 228.468 C 942 219.089, 937.836 212.156, 929.500 207.658 C 925.556 205.530, 924.731 205.497, 870.500 205.277 C 825.065 205.093, 814.814 205.301, 811.558  \" stroke=\"none\" fill=\"#ffffff\" fill-rule=\"evenodd\"/>\n</svg>\n\n\n    <div class=\"svgOnOff\"\n        [ngStyle]=\"{'fill': hover ? '#0fc48270' : 'none'}\"\n        (mouseover)=\"hover = true\"\n        (mouseout)=\"hover = false\">\n        <svg class=\"svgOnOff-container\"\n            (click)=turnOnOff(data) width=\"32\" height=\"32\"\n            viewBox=\"0 0 64 64\" fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            [ngStyle]=\"{'fill': hover ? '#0fc48270' : 'none'}\"\n            (mouseover)=\"hover = true\"\n            (mouseout)=\"hover = false\">\n            <path\n                [ngStyle]=\"{'fill': hover ? '#0fc48270' : 'none'}\"\n                (mouseover)=\"hover = true\"\n                (mouseout)=\"hover = false\"\n                d=\"M32 62C26.0666 62 20.2664 60.2405 15.3329 56.9441C10.3994 53.6477 6.55424 48.9623 4.28361 43.4805C2.01299 37.9987 1.41889 31.9667 2.57644 26.1473C3.734 20.3279 6.59122 14.9824 10.7868 10.7868C14.9824 6.59123 20.3279 3.73401 26.1473 2.57646C31.9667 1.4189 37.9987 2.013 43.4805 4.28363C48.9623 6.55426 53.6476 10.3994 56.9441 15.3329C60.2405 20.2664 62 26.0666 62 32C61.991 39.9537 58.8274 47.5791 53.2033 53.2033C47.5791 58.8274 39.9537 61.991 32 62V62ZM32 4.00001C26.4621 4.00001 21.0486 5.64218 16.444 8.71886C11.8395 11.7955 8.25063 16.1685 6.13137 21.2849C4.01212 26.4012 3.45763 32.0311 4.53801 37.4625C5.6184 42.894 8.28514 47.8831 12.201 51.799C16.1169 55.7149 21.106 58.3816 26.5375 59.462C31.9689 60.5424 37.5988 59.9879 42.7151 57.8686C47.8315 55.7494 52.2045 52.1606 55.2812 47.556C58.3578 42.9514 60 37.5379 60 32C59.9915 24.5766 57.0388 17.4596 51.7896 12.2104C46.5405 6.96119 39.4235 4.00848 32 4.00001V4.00001Z\"\n                fill=\"none\"></path>\n            <path\n                [ngStyle]=\"{'fill': hover ? '#0fc48270' : '#0fc482'}\"\n                (mouseover)=\"hover = true\"\n                (mouseout)=\"hover = false\"\n                d=\"M32 6C26.8577 6 21.8309 7.52487 17.5552 10.3818C13.2795 13.2387 9.94701 17.2994 7.97913 22.0502C6.01125 26.8011 5.49637 32.0288 6.49958 37.0723C7.5028 42.1159 9.97906 46.7486 13.6152 50.3848C17.2514 54.0209 21.8841 56.4972 26.9277 57.5004C31.9712 58.5036 37.1989 57.9887 41.9498 56.0209C46.7006 54.053 50.7613 50.7205 53.6182 46.4448C56.4751 42.1691 58 37.1423 58 32C57.9923 25.1067 55.2506 18.498 50.3763 13.6237C45.502 8.74942 38.8933 6.00768 32 6V6ZM29 13.96C29 13.1644 29.3161 12.4013 29.8787 11.8387C30.4413 11.2761 31.2044 10.96 32 10.96C32.7956 10.96 33.5587 11.2761 34.1213 11.8387C34.6839 12.4013 35 13.1644 35 13.96V33.04C34.9989 33.8247 34.6867 34.577 34.1319 35.1319C33.577 35.6867 32.8247 35.9989 32.04 36H31.96C31.1753 35.9989 30.423 35.6867 29.8681 35.1319C29.3133 34.577 29.0011 33.8247 29 33.04V13.96ZM44.66 46.16C42.7113 47.907 40.4225 49.2324 37.9373 50.053C35.4521 50.8735 32.8241 51.1715 30.2182 50.9283C27.6124 50.6851 25.0849 49.9059 22.7945 48.6396C20.5041 47.3733 18.5001 45.6473 16.9083 43.5698C15.3166 41.4923 14.1714 39.1083 13.5446 36.5672C12.9179 34.0262 12.8232 31.3831 13.2663 28.8037C13.7095 26.2243 14.681 23.7644 16.12 21.5783C17.5589 19.3922 19.4341 17.527 21.628 16.1C21.9857 15.8674 22.3886 15.7132 22.8102 15.6477C23.2319 15.5822 23.6626 15.6068 24.074 15.72C24.4757 15.8313 24.8491 16.0266 25.1698 16.293C25.4904 16.5593 25.7509 16.8906 25.934 17.265C26.2657 17.928 26.3415 18.69 26.1469 19.4054C25.9523 20.1208 25.5009 20.7394 24.879 21.143C22.5377 22.6769 20.7539 24.9255 19.793 27.5544C18.8321 30.1834 18.7454 33.0522 19.5458 35.7344C20.3461 38.4166 21.9908 40.7688 24.2352 42.4413C26.4797 44.1138 29.204 45.0172 32.003 45.0172C34.802 45.0172 37.5263 44.1138 39.7708 42.4413C42.0152 40.7688 43.6599 38.4166 44.4602 35.7344C45.2606 33.0522 45.1739 30.1834 44.213 27.5544C43.2521 24.9255 41.4683 22.6769 39.127 21.143C38.4573 20.7131 37.9859 20.0348 37.8163 19.2572C37.6468 18.4797 37.7931 17.6667 38.223 16.997C38.6529 16.3273 39.3313 15.8559 40.1088 15.6863C40.8863 15.5168 41.6993 15.6631 42.369 16.093C44.8141 17.6829 46.8597 19.8151 48.3471 22.3239C49.8344 24.8327 50.7234 27.6506 50.945 30.5588C51.1667 33.4669 50.7149 36.387 49.6249 39.0922C48.5349 41.7974 46.8359 44.2149 44.66 46.157V46.16Z\">\n            </path>\n        </svg>\n    </div>\n    </div>\n</div>",
      "templateCss" : "\r\n\r\n#title{\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 5%;\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0;\r\n}\r\n\r\n#container {\r\n    overflow: hidden;\r\n}\r\n\r\nsvg{\r\n    height: 90%;\r\n    z-index: 2;\r\n}\r\n\r\n.SVGdiv{\r\n    height: 50%;\r\n    width: 100%;\r\n    z-index: 1;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\np{\r\n    margin:0;\r\n   padding: 10px;\r\n   z-index: 3;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}\r\n\r\n#titulo{\r\n    font-size: 1.1rem;\r\n    text-align: center;\r\n}\r\n#conteudo{\r\n    font-size: 1.6rem;\r\n    font-weight: bold;\r\n}\r\n#legenda{\r\n    font-size: 0.9rem;\r\n    font-weight: 400;\r\n    margin: 0;\r\n}\r\n.svgOnOff{\r\n    position: absolute;\r\n    bottom: 10px;\r\n    right: 10px;\r\n    fill: none;\r\n    transition: fill 0.3s ease;\r\n    z-index: 2;\r\n}\r\n\r\n\r\n.svgOnOff:hover {\r\n  fill: rgba(15, 196, 130, 0.44);\r\n}\r\n\r\n",
      "controllerScript" : "'esversion: 8'\nlet relatedDevicesNames = [];\n\n\nasync function onOffSolenoide(centralId, body) {\n    const $http = self.ctx.$scope.$injector.get(\n        self.ctx.servicesMap.get('http'),\n    );\n    const response = await $http.post(`https://${centralId}.y.myio.com.br/api/onOffSolenoide`, body).toPromise();\n\n    return response;\n}\n\nasync function turnOnOff(status) {\n    const { centralId } = self.ctx.settings;\n    \n    const entityName = self.ctx.defaultSubscription\n        .data[0].datasource.entityName\n    \n    try {\n        await onOffSolenoide(centralId, {\n            device: entityName,\n            status: status,\n            relatedDevices: relatedDevicesNames,\n        });\n\n    } catch (e) {\n        console.log(e);\n        alert('Erro ao enviar status');\n    }\n}\n\n\nfunction fetchData(){\n     const subscriptionData = self.ctx.data[0].data;\n     const data = !subscriptionData.length || !subscriptionData[0][1]  ? null : subscriptionData[0][1] \n    self.ctx.$scope.data = data\n    \n    var entityName = self.ctx.defaultSubscription.data[0].datasource.entityLabel\n    self.ctx.$scope.entityName = entityName\n}\n\nasync function getDeviceName(deviceId) {\n    const deviceService = self.ctx.$scope.$injector.get(self.ctx.servicesMap.get('deviceService'));\n    const deviceData = await deviceService.getDevice(deviceId).toPromise();\n    return deviceData.name;\n}\n\nasync function getRelatedDevicesNames() {\n    const entityRelationService = self.ctx.$scope.$injector.get(self.ctx.servicesMap.get('entityRelationService'));\n    const attributeService = self.ctx.$scope.$injector.get(self.ctx.servicesMap.get('attributeService'));\n    const deviceService = self.ctx.$scope.$injector.get(self.ctx.servicesMap.get('deviceService')); // Adicionado\n\n    relatedDevicesNames = [];\n\n    \n    for (const entity of self.ctx.datasources) {\n        if (entity.entityType === \"DEVICE\") {\n            const relations = await entityRelationService.findByFrom(entity.entity.id).toPromise();\n            console.log(\"relations\", relations);\n\n            for (const relation of relations) {\n                console.log(\"relation\", relation);\n                const deviceId = relation.to.id;\n                try {\n                    const deviceName = await getDeviceName(deviceId);\n                    relatedDevicesNames.push(deviceName); \n                } catch (error) {\n                    console.error(\"Erro ao buscar o nome do dispositivo:\", deviceId, error);\n                }\n                \n            }\n                console.log(\"relationsDevices (nomes):\", relatedDevicesNames); \n\n        }\n    }\n}\n\n\nself.onInit = function() {\n    getRelatedDevicesNames();\n    fetchData();\n    self.ctx.$scope.turnOnOff = turnOnOff;\n\n    self.ctx.detectChanges();\n}\n\nself.onDataUpdated = function() {\n    fetchData();\n    self.ctx.detectChanges();\n}\n\n",
      "settingsSchema" : "{\r\n    \"schema\": {\r\n        \"type\": \"object\",\r\n        \"title\": \"Settings\",\r\n        \"properties\": {\r\n            \"centralId\": {\r\n                \"type\": \"string\",\r\n                \"title\": \"Id da Central\"\r\n            }\r\n        },\r\n        \"required\": [\"centralId\"]\r\n    },\r\n    \"form\": [\r\n        \"centralId\"\r\n    ]\r\n}",
      "dataKeySettingsSchema" : "{}\n",
      "settingsDirective" : "",
      "dataKeySettingsDirective" : "tb-value-card-widget-settings",
      "hasBasicMode" : true,
      "defaultConfig" : "{\"datasources\":[{\"type\":\"function\",\"name\":\"function\",\"dataKeys\":[{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"${entityName}\",\"color\":\"#4caf50\",\"settings\":{},\"_hash\":0.6972230379918407,\"funcBody\":\"var value = 'on'\\nreturn value;\",\"aggregationType\":null,\"units\":null,\"decimals\":null,\"usePostProcessing\":null,\"postFuncBody\":null}],\"alarmFilterConfig\":{\"statusList\":[\"ACTIVE\"]}}],\"timewindow\":{\"realtime\":{\"timewindowMs\":60000}},\"showTitle\":false,\"backgroundColor\":\"#673AB500\",\"color\":\"rgb(255, 255, 255)\",\"padding\":\"0\",\"settings\":{\"centralId\":\"sdfbasdfbsderfbxzdfbserfxzdcvbserb\"},\"title\":\"Liga/desliga solenoide\",\"showTitleIcon\":false,\"titleTooltip\":\"\",\"dropShadow\":true,\"enableFullscreen\":false,\"widgetStyle\":{},\"widgetCss\":\"\",\"titleStyle\":{\"fontSize\":\"16px\",\"fontWeight\":400},\"pageSize\":1024,\"noDataDisplayMessage\":\"\",\"borderRadius\":\"10px\",\"configMode\":\"advanced\",\"useDashboardTimewindow\":true,\"displayTimewindow\":true,\"enableDataExport\":false}"
    },
    "externalId" : null,
    "resources" : null,
    "id" : {
      "entityType" : "WIDGET_TYPE",
      "id" : "39b4f020-ea2a-11ef-a212-67802bff4221"
    },
    "scada" : false,
    "tags" : null
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}