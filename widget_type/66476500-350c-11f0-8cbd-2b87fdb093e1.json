{
  "entityType" : "WIDGET_TYPE",
  "entity" : {
    "fqn" : "report",
    "name" : "Report",
    "deprecated" : false,
    "image" : "tb-image;/api/images/tenant/Capturar_(31).PNG",
    "description" : null,
    "descriptor" : {
      "type" : "latest",
      "sizeX" : 14,
      "sizeY" : 11.5,
      "resources" : [ {
        "url" : "https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js"
      }, {
        "url" : "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css"
      }, {
        "url" : "https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"
      }, {
        "url" : "https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.21/lodash.min.js"
      } ],
      "templateHtml" : "<div class=\"widget-container\">\n    <div class=\"widget-header\">\n        <h2 class=\"widget-title\">{{widgetTitle}}</h2>\n        <div class=\"date-range\">\n            <input type=\"date\" \n                   [(ngModel)]=\"startDate\" \n                   (ngModelChange)=\"handleStartDateChange($event)\"\n                   [max]=\"endDateFormatted\">\n            <span>até</span>\n            <input type=\"date\" \n                   [(ngModel)]=\"endDate\" \n                   (ngModelChange)=\"handleEndDateChange($event)\"\n                   [min]=\"startDateFormatted\">\n            <button class=\"load-button\" (click)=\"loadData()\" [disabled]=\"isLoading\">\n                <i class=\"material-icons\">refresh</i>\n                Carregar\n            </button>\n        </div>\n        <div class=\"export-buttons\">\n            <button class=\"export-button\" (click)=\"exportToCSV()\" [disabled]=\"!reportDataSorted || reportDataSorted.length === 0\">\n                <i class=\"material-icons\">file_download</i>\n                CSV\n            </button>\n            <button class=\"export-button\" (click)=\"exportToPDF()\" [disabled]=\"!reportDataSorted || reportDataSorted.length === 0\">\n                <i class=\"material-icons\">picture_as_pdf</i>\n                PDF\n            </button>\n        </div>\n    </div>\n\n    <div *ngIf=\"errorMessage\" class=\"error-message\">\n        {{errorMessage}}\n    </div>\n\n    <div class=\"table-container\" style=\"position: relative;\">\n        <div *ngIf=\"isLoading\" class=\"loading-overlay\">\n            <i class=\"material-icons\" style=\"font-size: 48px; color: #5c307d;\">hourglass_empty</i>\n        </div>\n\n        <table>\n            <thead>\n                <tr>\n                    <th (click)=\"sortBy('deviceName')\">\n                        Loja\n                        <span class=\"sort-icon\" *ngIf=\"sortColumn === 'deviceName'\">\n                            {{sortReverse ? '▼' : '▲'}}\n                        </span>\n                    </th>\n                    <th (click)=\"sortBy('deviceId')\">\n                        Identificador\n                        <span class=\"sort-icon\" *ngIf=\"sortColumn === 'deviceId'\">\n                            {{sortReverse ? '▼' : '▲'}}\n                        </span>\n                    </th>\n                    <th (click)=\"sortBy('consumptionKwh')\">\n                        Consumo (kWh)\n                        <span class=\"sort-icon\" *ngIf=\"sortColumn === 'consumptionKwh'\">\n                            {{sortReverse ? '▼' : '▲'}}\n                        </span>\n                    </th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngIf=\"!reportDataSorted || reportDataSorted.length === 0\">\n                    <td colspan=\"3\" class=\"no-data\">\n                        Nenhum dado disponível\n                    </td>\n                </tr>\n                <tr *ngFor=\"let device of reportDataSorted\">\n                    <td>{{device?.deviceName || 'Dispositivo Desconhecido'}}</td>\n                    <td>{{device?.deviceId || '-'}}</td>\n                    <td [ngClass]=\"{'error-cell': device?.error || !device?.isValid}\">\n                        <span *ngIf=\"!device?.isValid\" class=\"invalid-device\">\n                            <i class=\"material-icons\">error_outline</i>\n                            {{device?.error || 'Dispositivo não configurado'}}\n                        </span>\n                        <span *ngIf=\"device?.isValid\">\n                            {{device?.error || (device?.consumptionKwh | number:consumptionDecimals) || '-'}}\n                        </span>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div> \n",
      "templateCss" : "#container {\n    overflow-y: auto;\n}\n\n#main.loading {\n    height: 100%;\n    width: 100%;\n    padding: 0;\n    margin: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: absolute;\n}\n\n#Myio{\n    width: 150px;\n    background-color: #3e1a7d;\n    padding: 10px;\n    border-radius: 5px;\n}\n\n#ReportHeader{\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n    padding: 5px;\n}\n\np{\n    font-size: 13px;\n    margin: 0;\n    font-family: Roboto;\n}\n\n.button{\n    all: unset;\n    cursor: pointer;\n    position: absolute;\n    top: 8px;\n    right: 40px;\n}\n\n.example-form-field{\n    margin: 0;\n}\n.hide-in-csv.button{\n    right: 60px;\n}\n\n.widget-container {\n    font-family: 'Roboto', sans-serif;\n    padding: 20px;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\n.widget-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 20px;\n    flex-wrap: wrap;\n    gap: 16px;\n}\n\n.widget-title {\n    font-size: 18px;\n    font-weight: 500;\n    color: #333;\n    margin: 0;\n}\n\n.date-range {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n}\n\n.date-range input[type=\"date\"] {\n    padding: 8px;\n    border: 1px solid #e0e0e0;\n    border-radius: 4px;\n    font-family: 'Roboto', sans-serif;\n    font-size: 14px;\n    color: #333;\n    background-color: white;\n}\n\n.date-range input[type=\"date\"]:focus {\n    outline: none;\n    border-color: #5c307d;\n}\n\n.date-range span {\n    color: #666;\n    font-size: 14px;\n}\n\n.export-buttons {\n    display: flex;\n    gap: 10px;\n}\n\n.export-button {\n    padding: 8px 16px;\n    border: none;\n    border-radius: 4px;\n    background-color: #5c307d;\n    color: white;\n    cursor: pointer;\n    font-size: 14px;\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    transition: background-color 0.2s;\n}\n\n.export-button:hover {\n    background-color: #4a265f;\n}\n\n.export-button:disabled {\n    background-color: #ccc;\n    cursor: not-allowed;\n}\n\n.table-container {\n    flex: 1;\n    overflow: auto;\n    border: 1px solid #e0e0e0;\n    border-radius: 4px;\n}\n\ntable {\n    width: 100%;\n    border-collapse: collapse;\n    background-color: white;\n}\n\nth {\n    background-color: #5c307d;\n    color: white;\n    padding: 12px;\n    text-align: left;\n    font-weight: 500;\n    cursor: pointer;\n    user-select: none;\n    position: sticky;\n    top: 0;\n    z-index: 1;\n}\n\nth:hover {\n    background-color: #4a265f;\n}\n\ntd {\n    padding: 12px;\n    border-bottom: 1px solid #e0e0e0;\n}\n\ntr:nth-child(even) {\n    background-color: #f5f7fa;\n}\n\ntr:hover {\n    background-color: #f0f2f5;\n}\n\n.loading-overlay {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(255, 255, 255, 0.8);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 2;\n}\n\n.error-message {\n    color: #d32f2f;\n    padding: 12px;\n    background-color: #ffebee;\n    border-radius: 4px;\n    margin-bottom: 16px;\n}\n\n.no-data {\n    text-align: center;\n    padding: 32px;\n    color: #666;\n}\n\n.sort-icon {\n    margin-left: 4px;\n    font-size: 12px;\n}\n\n.error-cell {\n    color: #d32f2f;\n    font-style: italic;\n}\n\n.invalid-device {\n    display: flex;\n    align-items: center;\n    gap: 4px;\n    color: #d32f2f;\n}\n\n.invalid-device .material-icons {\n    font-size: 16px;\n    color: #d32f2f;\n}\n\n.load-button {\n    padding: 8px 16px;\n    border: none;\n    border-radius: 4px;\n    background-color: #5c307d;\n    color: white;\n    cursor: pointer;\n    font-size: 14px;\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    transition: background-color 0.2s;\n}\n\n.load-button:hover {\n    background-color: #4a265f;\n}\n\n.load-button:disabled {\n    background-color: #ccc;\n    cursor: not-allowed;\n}\n\n.load-button .material-icons {\n    font-size: 18px;\n}",
      "controllerScript" : "<div class=\"widget-container\">\n    <div class=\"widget-header\">\n        <h2 class=\"widget-title\">{{widgetTitle}}</h2>\n        <div class=\"date-range\">\n            <input type=\"date\" \n                   [(ngModel)]=\"startDate\" \n                   (ngModelChange)=\"handleStartDateChange($event)\"\n                   [max]=\"endDateFormatted\">\n            <span>até</span>\n            <input type=\"date\" \n                   [(ngModel)]=\"endDate\" \n                   (ngModelChange)=\"handleEndDateChange($event)\"\n                   [min]=\"startDateFormatted\">\n            <button class=\"load-button\" (click)=\"loadData()\" [disabled]=\"isLoading\">\n                <i class=\"material-icons\">refresh</i>\n                Carregar\n            </button>\n        </div>\n        <div class=\"export-buttons\">\n            <button class=\"export-button\" (click)=\"exportToCSV()\" [disabled]=\"!reportDataSorted || reportDataSorted.length === 0\">\n                <i class=\"material-icons\">file_download</i>\n                CSV\n            </button>\n            <button class=\"export-button\" (click)=\"exportToPDF()\" [disabled]=\"!reportDataSorted || reportDataSorted.length === 0\">\n                <i class=\"material-icons\">picture_as_pdf</i>\n                PDF\n            </button>\n        </div>\n    </div>\n\n    <div *ngIf=\"errorMessage\" class=\"error-message\">\n        {{errorMessage}}\n    </div>\n\n    <div class=\"table-container\" style=\"position: relative;\">\n        <div *ngIf=\"isLoading\" class=\"loading-overlay\">\n            <i class=\"material-icons\" style=\"font-size: 48px; color: #5c307d;\">hourglass_empty</i>\n        </div>\n\n        <table>\n            <thead>\n                <tr>\n                    <th (click)=\"sortBy('deviceName')\">\n                        Loja\n                        <span class=\"sort-icon\" *ngIf=\"sortColumn === 'deviceName'\">\n                            {{sortReverse ? '▼' : '▲'}}\n                        </span>\n                    </th>\n                    <th (click)=\"sortBy('deviceId')\">\n                        Identificador\n                        <span class=\"sort-icon\" *ngIf=\"sortColumn === 'deviceId'\">\n                            {{sortReverse ? '▼' : '▲'}}\n                        </span>\n                    </th>\n                    <th (click)=\"sortBy('consumptionKwh')\">\n                        Consumo (kWh)\n                        <span class=\"sort-icon\" *ngIf=\"sortColumn === 'consumptionKwh'\">\n                            {{sortReverse ? '▼' : '▲'}}\n                        </span>\n                    </th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngIf=\"!reportDataSorted || reportDataSorted.length === 0\">\n                    <td colspan=\"3\" class=\"no-data\">\n                        Nenhum dado disponível\n                    </td>\n                </tr>\n                <tr *ngFor=\"let device of reportDataSorted\">\n                    <td>{{device?.deviceName || 'Dispositivo Desconhecido'}}</td>\n                    <td>{{device?.deviceId || '-'}}</td>\n                    <td [ngClass]=\"{'error-cell': device?.error || !device?.isValid}\">\n                        <span *ngIf=\"!device?.isValid\" class=\"invalid-device\">\n                            <i class=\"material-icons\">error_outline</i>\n                            {{device?.error || 'Dispositivo não configurado'}}\n                        </span>\n                        <span *ngIf=\"device?.isValid\">\n                            {{device?.error || (device?.consumptionKwh | number:consumptionDecimals) || '-'}}\n                        </span>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div> \n",
      "settingsSchema" : "{\r\n    \"schema\": {\r\n        \"type\": \"object\",\r\n        \"title\": \"Settings\",\r\n        \"properties\": {\r\n            \"subtitle\":{\r\n                \"type\":\"string\",\r\n                \"title\": \"Subtítulo do Relatorio\"\r\n            }\r\n        },\r\n        \"required\": [\"subtitle\"]\r\n    },\r\n    \"form\": [\r\n        \"subtitle\"\r\n    ]\r\n}",
      "dataKeySettingsSchema" : "{}\n",
      "hasBasicMode" : false,
      "defaultConfig" : "{\"showTitle\":false,\"backgroundColor\":\"#FFFFFF\",\"color\":\"rgb(0, 0, 0)\",\"padding\":\"8px\",\"settings\":{\"centralId\":\"6354365436543654-Sdvzs2f5dbv4z2sd5f4v3z6d\"},\"title\":\"Report\",\"showTitleIcon\":false,\"titleTooltip\":\"\",\"dropShadow\":true,\"enableFullscreen\":true,\"borderRadius\":\"10px\",\"widgetStyle\":{},\"widgetCss\":\"\",\"titleStyle\":{\"fontSize\":\"16px\",\"fontWeight\":400},\"pageSize\":1024,\"noDataDisplayMessage\":\"\",\"enableDataExport\":false,\"useDashboardTimewindow\":true,\"displayTimewindow\":true,\"datasources\":[{\"type\":\"function\",\"name\":\"function\",\"dataKeys\":[{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Sin\",\"color\":\"#2196f3\",\"settings\":{},\"_hash\":0.25096343243849395,\"funcBody\":\"return Math.round(1000*Math.sin(time/5000));\"}]}],\"timewindow\":{\"realtime\":{\"timewindowMs\":60000}}}"
    },
    "externalId" : null,
    "resources" : null,
    "id" : {
      "entityType" : "WIDGET_TYPE",
      "id" : "66476500-350c-11f0-8cbd-2b87fdb093e1"
    },
    "scada" : false,
    "tags" : null
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}