{
  "entityType" : "WIDGET_TYPE",
  "entity" : {
    "fqn" : "agendamento_http_request_",
    "name" : "Agendamento (HTTP Request)",
    "deprecated" : false,
    "image" : "tb-image;/api/images/tenant/Screenshot from 2024-04-11 20-14-06.png",
    "description" : null,
    "descriptor" : {
      "type" : "latest",
      "sizeX" : 5.5,
      "sizeY" : 8,
      "resources" : [ ],
      "templateHtml" : "<div id=\"main\">\n    <div *ngFor=\"let schedule of schedules;\">\n        <fieldset id=\"cloneable-fieldset\">\n            <legend id=\"titulo\">{{entityName}}</legend>\n            <fieldset class=\"form-control\">\n                <legend for=\"Inicio\">Início</legend>\n                <input type=\"time\" name=\"Hora\"\n                    [(ngModel)]=\"schedule.startHour\"\n                    id=\"startHour\" />\n            </fieldset>\n\n            <fieldset class=\"form-control\">\n                <legend for=\"Termino\">Término</legend>\n                <input type=\"time\" name=\"Hora\"\n                    [(ngModel)]=\"schedule.endHour\"\n                    id=\"endHour\" />\n            </fieldset>\n\n            <div class=\"checkboxRetain\">\n                <input [(ngModel)]=\"schedule.retain\"\n                    type=\"checkbox\" id=\"domingo\"\n                    name=\"retentivo\" value=\"Retentivo\"\n                    class=\"custom-checkbox\">\n\n                <label for=\"retentivo\">Retentivo</label>\n            </div>\n\n            <fieldset class=\"form-control\">\n                <legend>Dias:</legend>\n                <div class=\"selectDays\">\n                    <div class=\"checkboxDays\">\n                        <input\n                            [(ngModel)]=\"schedule.daysWeek.mon\"\n                            type=\"checkbox\" id=\"segunda\"\n                            name=\"daysWeek[]\" value=\"Segunda\"\n                            class=\"custom-checkbox\">\n\n                        <label for=\"segunda\">Segunda</label>\n                    </div>\n                    <div class=\"checkboxDays\">\n                        <input\n                            [(ngModel)]=\"schedule.daysWeek.tue\"\n                            type=\"checkbox\" id=\"terca\"\n                            name=\"daysWeek[]\" value=\"Terça\"\n                            class=\"custom-checkbox\">\n\n                        <label for=\"terca\">Terça</label>\n                    </div>\n                    <div class=\"checkboxDays\">\n                        <input\n                            [(ngModel)]=\"schedule.daysWeek.wed\"\n                            type=\"checkbox\" id=\"quarta\"\n                            name=\"daysWeek[]\" value=\"Quarta\"\n                            class=\"custom-checkbox\">\n                        <label for=\"quarta\">Quarta</label>\n                    </div>\n                    <div class=\"checkboxDays\">\n                        <input\n                            [(ngModel)]=\"schedule.daysWeek.thu\"\n                            type=\"checkbox\" id=\"quinta\"\n                            name=\"daysWeek[]\" value=\"Quinta\"\n                            class=\"custom-checkbox\">\n\n                        <label for=\"quinta\">Quinta</label>\n                    </div>\n                    <div class=\"checkboxDays\">\n                        <input\n                            [(ngModel)]=\"schedule.daysWeek.fri\"\n                            type=\"checkbox\" id=\"sexta\"\n                            name=\"daysWeek[]\" value=\"Sexta\"\n                            class=\"custom-checkbox\">\n\n                        <label for=\"sexta\">Sexta</label>\n                    </div>\n                    <div class=\"checkboxDays\">\n                        <input\n                            [(ngModel)]=\"schedule.daysWeek.sat\"\n                            type=\"checkbox\" id=\"sabado\"\n                            name=\"daysWeek[]\" value=\"Sábado\"\n                            class=\"custom-checkbox\">\n\n                        <label for=\"sabado\">Sábado</label>\n                    </div>\n                    <div class=\"checkboxDays\">\n                        <input\n                            [(ngModel)]=\"schedule.daysWeek.sun\"\n                            type=\"checkbox\" id=\"domingo\"\n                            name=\"daysWeek[]\" value=\"Domingo\"\n                            class=\"custom-checkbox\">\n\n                        <label for=\"domingo\">Domingo</label>\n                    </div>\n                    <div class=\"checkboxDays\">\n                        <input\n                            [(ngModel)]=\"schedule.holiday\"\n                            type=\"checkbox\" id=\"feriado\"\n                            name=\"Feriado\" value=\"Feriado\"\n                            class=\"custom-checkbox\">\n\n                        <label for=\"segunda\">Feriado</label>\n                    </div>\n                </div>\n            </fieldset>\n            <button type=\"submit\" (click)=\"remove(schedule)\">\n                Remover\n            </button>\n        </fieldset>\n    </div>\n    <div class=\"divButtons\">\n        <button type=\"submit\" (click)=\"addSchedule()\">+\n            Intervalo</button>\n        <button type=\"submit\"\n            (click)=\"submit()\">Salvar</button>\n    </div>\n</div>",
      "templateCss" : "#container {\n    overflow-y: auto;\n}\n\n#main {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\nfieldset {\n    border: none;\n    border-radius: 5px;\n    display: flex;\n    align-items: center;\n    flex-direction: row;\n    flex-wrap: wrap;\n    margin: 10px;\n    width: auto;\n    padding-left: 10px;\n    font-size: 14px;\n    background-color: #0f0f17;\n    padding-bottom: 5px;\n}\n\n\n#cloneable-fieldset {\n    background-color: #1F2126;\n    border: none;\n}\n\n\n#titulo {\n    font-size: 16px;\n}\n\n.selectDays {\n    width: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    margin: 10px;\n    flex: 1 1 5px;\n\n}\n\n.checkboxDays {\n    width: 100px;\n    height: 20px;\n    display: flex;\n    align-items: center;\n    margin: 10px;\n    margin-right: 10px;\n    font-size: 16px;\n}\n\n.checkboxRetain {\n    width: 100%;\n    display: flex;\n    align-items: center;\n    margin: 10px;\n    margin-right: 10px;\n    padding-left: 10px;\n    font-size: 16px;\n}\n\n.form-control {\n    width: 100%;\n}\n\ninput[type=\"checkbox\"] {\n    appearance: none;\n    background-color: #191B1F;\n    margin: 0;\n    margin-right: 7px;\n    font: inherit;\n    color: #191B1F;\n    width: 1.2em;\n    height: 1.2em;\n    font-size: 16px;\n    border: 1px solid rgba(192, 192, 192, 0.5);\n    border-radius: 0.15em;\n    transform: translateY(-0.075em);\n    display: grid;\n    place-content: center;\n}\n\ninput[type=\"checkbox\"]:hover {\n    background-color: rgba(192, 192, 192, 0.5);\n    cursor: pointer;\n}\n\ninput[type=\"checkbox\"]::before {\n    content: \"\";\n    width: 0.65em;\n    height: 0.65em;\n    transform: scale(0);\n    transition: 120ms transform ease-in-out;\n    box-shadow: inset 1em 1em white;\n    transform-origin: bottom left;\n    clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);\n}\n\n\ninput[type=\"checkbox\"]:checked {\n    background-color: #0FC080;\n\n}\n\ninput[type=\"checkbox\"]:checked::before {\n    transform: scale(1);\n}\n\n\ninput[type=\"time\"] {\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n    width: 100%;\n    padding: 10px;\n    font-size: 16px;\n    color: white;\n    border: none;\n    border-radius: 0;\n    background-color: inherit;\n}\n\ninput[type=\"time\"]::-webkit-inner-spin-button,\ninput[type=\"time\"]::-webkit-calendar-picker-indicator,\ninput[type=time]::-webkit-datetime-edit-ampm-field {\n    display: none;\n}\n\ninput[type=\"time\"]:focus {\n    outline: none;\n    box-shadow: none;\n}\n\n\nbutton {\n    background-color: #673AB5;\n    color: white;\n    padding: 10px;\n    border-radius: 5px;\n    margin: 5px;\n    font-size: 16px;\n    border: none;\n}\n\nbutton:hover {\n    box-shadow: 5px 5px 5px 0px black, 0 10px 20px 0 black;\n\n}\n\nbutton:active {\n    box-shadow: 2px 2px 2px 0px black, 0 5px 10px 0 black;\n    transform: translateY(2px);\n}\n\n.divButtons {\n    position: fixed;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: fit-content;\n    display: flex;\n    align-items: flex-end;\n    justify-content: flex-end;\n    margin: 8px;\n}\n\n.divButtons>button {\n    cursor: pointer;\n}",
      "controllerScript" : "'esversion: 8';\n\nfunction addSchedule() {\n    self.ctx.$scope.schedules.push({\n        startHour: '00:00',\n        endHour: '03:00',\n        daysWeek: {\n            mon: false,\n            tue: false,\n            wed: false,\n            thu: false,\n            fri: false,\n            sat: false,\n            sun: false,\n        },\n        holiday: false,\n        retain: false,\n    });\n}\n\nasync function sendRPC(centralId, body) {\n    const $http = self.ctx.$scope.$injector.get(\n        self.ctx.servicesMap.get('http'),\n    );\n    const response = await $http.post(`https://${centralId}.y.myio.com.br/api/rpc`, body).toPromise();\n    console.log(response);\n    \n    return response;\n}\n\nasync function submit() {\n    const { centralId } = self.ctx.settings;\n\n    const attributeService = self.ctx.$scope.$injector.get(\n        self.ctx.servicesMap.get('attributeService'));\n\n    const schedules = self.ctx.$scope.schedules;\n    const attributes = [{\n        'key': 'schedules',\n        'value': schedules\n    }];\n    let entityId = {\n        id: self.ctx.defaultSubscription.data[0]\n            .datasource.entityId,\n        entityType: 'DEVICE',\n    };\n    \n    const entityName = self.ctx.defaultSubscription\n        .data[0].datasource.entityName\n\n    try {\n        await sendRPC(centralId, {\n            device: entityName,\n            method: 'updateSchedules',\n            params: schedules,\n        });\n        \n        await attributeService\n            .saveEntityAttributes(entityId, 'SHARED_SCOPE',\n                attributes)\n            .toPromise();\n        alert('Agendamento salvo com sucesso.');\n    } catch (e) {\n        console.log('E:', e);\n        alert('Dispositivo Inativo');\n    }\n}\n\nfunction remove(schedule) {\n    const index = self.ctx.$scope.schedules.indexOf(schedule);\n    \n    self.ctx.$scope.schedules.splice(index, 1);\n    console.log('index:', index);\n}\n\nself.onInit = async function() {\n    const attributeService = self.ctx.$scope.$injector.get(\n        self.ctx.servicesMap.get('attributeService')\n    );\n    const entityName = self.ctx.defaultSubscription\n        .data[0].datasource.entityName\n    const entityId = self.ctx.defaultSubscription.data[0]\n            .datasource.entityId;\n\n    let schedules = [];\n\n    self.ctx.$scope.addSchedule = addSchedule;\n    self.ctx.$scope.submit = submit;\n    self.ctx.$scope.remove = remove;\n    self.ctx.$scope.entityId = entityId;\n\n    const attributes = await attributeService.getEntityAttributes({\n        id: self.ctx.$scope.entityId,\n        entityType: 'DEVICE',\n    }, 'SHARED_SCOPE')\n    .toPromise();\n    \n    schedules = attributes.reduce((acc, attribute) => {\n        if (attribute.key === 'schedules') {\n            return attribute.value;\n        }\n\n        return acc;\n    }, []);\n    \n    self.ctx.$scope.schedules = schedules;\n    self.ctx.$scope.entityName = entityName;\n    self.ctx.detectChanges();\n}\n\nself.onDataUpdated = function() {}\n\nself.onDestroy = function() {}",
      "settingsSchema" : "{\r\n    \"schema\": {\r\n        \"type\": \"object\",\r\n        \"title\": \"Settings\",\r\n        \"properties\": {\r\n            \"centralId\": {\r\n                \"type\": \"string\",\r\n                \"title\": \"Id da Central\"\r\n            }\r\n        },\r\n        \"required\": [\"centralId\"]\r\n    },\r\n    \"form\": [\r\n        \"centralId\"\r\n    ]\r\n}",
      "dataKeySettingsSchema" : "{}\n",
      "dataKeySettingsDirective" : "tb-value-card-widget-settings",
      "hasBasicMode" : true,
      "defaultConfig" : "{\"showTitle\":true,\"backgroundColor\":\"#191B1F\",\"color\":\"#FFFFFF\",\"padding\":\"10px\",\"settings\":{\"TituloWidget\":\"Programar Intervalo\"},\"title\":\"Agendamento (HTTP Request)\",\"useDashboardTimewindow\":true,\"displayTimewindow\":true,\"titleColor\":\"#FFFFFF\",\"showTitleIcon\":false,\"titleTooltip\":\"\",\"dropShadow\":true,\"enableFullscreen\":true,\"margin\":\"2px\",\"borderRadius\":\"10px\",\"widgetStyle\":{},\"widgetCss\":\".tb-widget-header{\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n}\",\"titleStyle\":{\"fontSize\":\"16px\",\"fontWeight\":400},\"pageSize\":1024,\"noDataDisplayMessage\":\"\",\"targetDeviceAliasIds\":[\"de06b681-62f8-8f6c-e5f0-970bdc1ef03b\"],\"datasources\":[],\"timewindow\":{\"realtime\":{\"timewindowMs\":60000}}}"
    },
    "externalId" : null,
    "resources" : null,
    "id" : {
      "entityType" : "WIDGET_TYPE",
      "id" : "6757b900-1eb9-11ef-ad2c-53aeabe7d3fa"
    },
    "scada" : false,
    "tags" : null
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}