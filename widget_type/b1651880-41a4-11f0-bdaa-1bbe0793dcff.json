{
  "entityType" : "WIDGET_TYPE",
  "entity" : {
    "fqn" : "blinking_air_status_energy",
    "name" : "Blinking Air Status + Energy",
    "deprecated" : false,
    "image" : null,
    "description" : null,
    "descriptor" : {
      "type" : "latest",
      "sizeX" : 7.5,
      "sizeY" : 3,
      "resources" : [ ],
      "templateHtml" : "<div class=\"status-container\">\r\n  <div class=\"status-header\">ðŸ’¡ {{entityLabel}}</div>\r\n  <img id=\"status-img\" class=\"status-img\" src=\"/api/images/public/XVSlrbdXz5jAFfYNo4ymvu3jh76Iw6Ag\" alt=\"Estado\" />\r\n  <div id=\"status-label\" class=\"status-label\">{{statusText}}</div>\r\n</div>\r\n",
      "templateCss" : ".status-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: 2px solid #ddd;\r\n  border-radius: 16px;\r\n  padding: 20px;\r\n  background-color: #fff;\r\n  box-shadow: 0 6px 18px rgba(0, 0, 0, 0.1);\r\n  height: 100%;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n}\r\n\r\n.status-img {\r\n  height: 100px;\r\n  max-width: 100%;\r\n  transition: opacity 0.3s ease-in-out;\r\n}\r\n\r\n.blink {\r\n  animation: blink 1.2s infinite;\r\n}\r\n\r\n@keyframes blink {\r\n  0%, 100% { opacity: 1; }\r\n  50% { opacity: 0.3; }\r\n}\r\n\r\n.status-label {\r\n  margin-top: 12px;\r\n  font-size: 1.2em;\r\n  font-weight: 600;\r\n  color: #333;\r\n}\r\n\r\n.status-header {\r\n  font-size: 0.9em;\r\n  color: #666;\r\n  margin-bottom: 12px;\r\n  font-weight: 500;\r\n}\r\n",
      "controllerScript" : "self.onInit = function () {\r\n  const ctx = self.ctx;\r\n  const settings = ctx.settings || {};\r\n  const dataKeySettings = ctx.data?.[0]?.dataKey?.settings || {};\r\n\r\n  const threshold = settings.threshold ?? 100;\r\n  const onImg = settings.onImageUrl || '/api/images/public/6ziChYbLxcZuCismHWEBvCWNj6LLUet0';\r\n  const fanImg = settings.fanImageUrl || '/api/images/public/nAqgFLTCDHSyrCaboKq6R31Q45xI4NNT';\r\n  const offImg = settings.offImageUrl || '/api/images/public/V3nAuG6sBlMJAAOeiXWhctFKZzBuo6IL';\r\n  const offlineImg = '/api/images/public/XVSlrbdXz5jAFfYNo4ymvu3jh76Iw6Ag';\r\n\r\n  // Bind init\r\n  ctx.$scope.entityLabel = ctx.datasources?.[0]?.entityLabel || 'Dispositivo';\r\n  ctx.$scope.statusText = 'Carregando...';\r\n\r\n  // Append CSS\r\n  const style = document.createElement('style');\r\n  style.innerHTML = `/* conteÃºdo do CSS acima */`;\r\n  document.head.appendChild(style);\r\n\r\n  // Append HTML (via Angular binding)\r\n  /*\r\n  const html = `\r\n    <div class=\"status-container\">\r\n      <div class=\"status-header\">ðŸ’¡ {{entityLabel}}</div>\r\n      <img id=\"status-img\" class=\"status-img\" ng-src=\"${offlineImg}\" alt=\"Estado\" />\r\n      <div id=\"status-label\" class=\"status-label\">{{statusText}}</div>\r\n    </div>\r\n  `;\r\n  ctx.$container.append(html);\r\n  */\r\n\r\n  self.onDataUpdated = function () {\r\n    try {\r\n      const data = ctx.data?.[0]?.data;\r\n      const value = data && data.length ? data[data.length - 1][1] : null;\r\n      const $img = $('#status-img', ctx.$container);\r\n\r\n      if (value == null || isNaN(value)) {\r\n        $img.attr('src', offlineImg).removeClass('blink');\r\n        ctx.$scope.statusText = dataKeySettings.noDataText || 'Sem dados';\r\n        return;\r\n      }\r\n\r\n      const isOn = value > 0;\r\n      const isFanMode = value >= threshold;\r\n      const imgToShow = isOn ? (isFanMode ? fanImg : onImg) : offImg; \r\n      $img.attr('src', imgToShow);\r\n      $img.toggleClass('blink', isOn);\r\n      ctx.$scope.statusText = isOn ? (isFanMode ? 'Ligado na VentilaÃ§Ã£o' : 'Ligado')  : 'Desligado';\r\n    } catch (err) {\r\n      console.error('Erro ao atualizar imagem/estado:', err);\r\n    }\r\n  };\r\n};\r\n",
      "settingsSchema" : "{}",
      "dataKeySettingsSchema" : "{}\n",
      "defaultConfig" : "{\"datasources\":[{\"type\":\"function\",\"name\":\"function\",\"dataKeys\":[{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Random\",\"color\":\"#2196f3\",\"settings\":{},\"_hash\":0.15479322438769105,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\"}]}],\"timewindow\":{\"realtime\":{\"timewindowMs\":60000}},\"showTitle\":true,\"backgroundColor\":\"#fff\",\"color\":\"rgba(0, 0, 0, 0.87)\",\"padding\":\"8px\",\"settings\":{},\"title\":\"Attributes card\",\"decimals\":null}"
    },
    "externalId" : null,
    "resources" : null,
    "id" : {
      "entityType" : "WIDGET_TYPE",
      "id" : "b1651880-41a4-11f0-bdaa-1bbe0793dcff"
    },
    "scada" : false,
    "tags" : null
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}